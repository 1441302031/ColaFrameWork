//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SingletonMonoBehaviour_NetMessageCenterWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SingletonMonoBehaviour<NetMessageCenter>), typeof(UnityEngine.MonoBehaviour), "SingletonMonoBehaviour_NetMessageCenter");
		L.RegFunction("CreateInstance", CreateInstance);
		L.RegFunction("ReleaseInstance", ReleaseInstance);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("s_debugDestroy", get_s_debugDestroy, set_s_debugDestroy);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SingletonMonoBehaviour<NetMessageCenter>.CreateInstance();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReleaseInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SingletonMonoBehaviour<NetMessageCenter>.ReleaseInstance();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_debugDestroy(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, SingletonMonoBehaviour<NetMessageCenter>.s_debugDestroy);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, SingletonMonoBehaviour<NetMessageCenter>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_debugDestroy(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			SingletonMonoBehaviour<NetMessageCenter>.s_debugDestroy = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

